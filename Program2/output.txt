        OCaml version 4.10.0

# * * * *     * * * *                         val first_duplicate : int list -> int = <fun>
#   * * * *                         val nonrepeating_helper : int list -> int list -> int = <fun>
#     val first_nonrepeating : int list -> int = <fun>
#       * * * *                                                   val checkSums : int list -> int list -> int -> bool = <fun>
val sumOfTwo : int list * int list * int -> bool = <fun>
#   * * * *             val find_cyk_sublists : int -> int -> (int * int) list -> (int * int) list =
  <fun>
#     val cyk_sublists : int -> (int * int) list = <fun>
#             - : int = 4
# - : int = 2
# - : int = -10000
#     - : int = 7
# - : int = 9
# - : int = 1
# - : int = 9
# - : int = 3
# - : int = 7
# - : int = -10000
# - : int = 5
# - : int = -10000
#     - : bool = true
# - : bool = false
# - : bool = true
# - : bool = true
# - : bool = false
# - : bool = true
# - : bool = false
#     - : (int * int) list = [(1, 3); (2, 2); (3, 1)]
# - : (int * int) list = [(1, 2); (2, 1)]
# - : (int * int) list = [(1, 4); (2, 3); (3, 2); (4, 1)]
# - : (int * int) list = [(1, 5); (2, 4); (3, 3); (4, 2); (5, 1)]
# 
